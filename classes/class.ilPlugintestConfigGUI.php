<?php

require_once __DIR__ . "/../vendor/autoload.php";

use srag\Plugins\Plugintest\Config\ConfigCtrl;
use srag\Plugins\Plugintest\Utils\PlugintestTrait;
use srag\DevTools\Plugintest\DevToolsCtrl;
use srag\DIC\Plugintest\DICTrait;

/**
 * Class ilPlugintestConfigGUI
 *
 * Generated by SrPluginGenerator v2.9.1
 *
 * @author Robert Schmidt <support@fluxlabs.ch>
 * @author fluxlabs <support@fluxlabs.ch>
 */
class ilPlugintestConfigGUI extends ilPluginConfigGUI
{

    use DICTrait;
    use PlugintestTrait;

    const CMD_CONFIGURE = "configure";
    const PLUGIN_CLASS_NAME = ilPlugintestPlugin::class;


    /**
     * ilPlugintestConfigGUI constructor
     */
    public function __construct()
    {

    }


    /**
     * @inheritDoc
     */
    public function performCommand(/*string*/ $cmd) : void
    {
        $this->setTabs();

        $next_class = self::dic()->ctrl()->getNextClass($this);

        switch (strtolower($next_class)) {
            case strtolower(ConfigCtrl::class):
                self::dic()->ctrl()->forwardCommand(new ConfigCtrl());
                break;

            default:
                $cmd = self::dic()->ctrl()->getCmd();

                switch ($cmd) {
                    case self::CMD_CONFIGURE:
                        $this->{$cmd}();
                        break;

                    default:
                        break;
                }
                break;
        }
    }


    /**
     *
     */
    protected function configure() : void
    {
        global $tpl;

		$form = $this->initConfigurationForm();
		$tpl->setContent($form->getHTML());
    }


    /**
     *
     */
    protected function setTabs() : void
    {
        ConfigCtrl::addTabs();

        self::dic()->locator()->addItem(ilPlugintestPlugin::PLUGIN_NAME, self::dic()->ctrl()->getLinkTarget($this, self::CMD_CONFIGURE));
    }

    public function save()
	{
		global $tpl, $lng, $ilCtrl;
	
		$pl = $this->getPluginObject();
		
		$form = $this->initConfigurationForm();
		if ($form->checkInput())
		{
			$set1 = $form->getInput("setting_1");
			$set2 = $form->getInput("setting_2");
	
			// @todo: implement saving to db
			
			ilUtil::sendSuccess($pl->txt("saving_invoked"), true);
			$ilCtrl->redirect($this, "configure");
		}
		else
		{
			$form->setValuesByPost();
			$tpl->setContent($form->getHtml());
		}
	}
}
